{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpenseButton.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","item","length","map","id","ExpensesFilter","value","selected","onChange","event","selectedYear","target","onSelectYear","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointArray","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","setSelectedYear","filteredExpenses","items","filter","toString","ExpensesChart","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onCancelButton","type","min","step","onClick","NewExpenseButton","click","setClick","console","log","boo","NewExpense","enteredData","random","onAddExpense","dummy_expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39ed90d4.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\n\nexport function ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const date = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{date}</div>\n    </div>\n  );\n}\n","import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseItem.css\";\nimport { ExpenseDate } from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpenseItem(props) {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  if (props.item.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.item.map((item) => (\n        <ExpenseItem\n          key={item.id}\n          title={item.title}\n          amount={item.amount}\n          date={item.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const selectYearMenu = (event) => {\n    const selectedYear = event.target.value;\n    props.onSelectYear(selectedYear);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={selectYearMenu}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100);\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointArray = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointArray);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n          key={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpenseChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpenseChart;\n","import React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n  const handleSelectYear = (props) => {\n    setSelectedYear(props);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={selectedYear}\n          onSelectYear={handleSelectYear}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList item={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const handleClick = () => {\n    props.onCancelButton(false);\n  };\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredDate(\"\");\n    setEnteredAmount(\"\");\n    setEnteredTitle(\"\");\n    props.onCancelButton(false);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={handleClick}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpenseButton = (props) => {\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => {\n    setClick(true);\n    console.log(click);\n  };\n\n  const cancelButton = (boo) => {\n    setClick(boo);\n    console.log(\"bbbb\");\n  };\n\n  return (\n    <div>\n      {click === false && (\n        <button onClick={handleClick}>Add New Expense </button>\n      )}\n      {click === true && (\n        <ExpenseForm\n          onSaveExpenseData={props.onSaveExpenseData}\n          onCancelButton={cancelButton}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpenseButton;\n","import React from \"react\";\nimport \"./NewExpense.css\";\nimport NewExpenseButton from \"./NewExpenseButton\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredData) => {\n    const expenseData = {\n      ...enteredData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <NewExpenseButton onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummy_expenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(dummy_expenses);\n\n  const addExpenseHandler = (enteredData) => {\n    setExpenses((prevExpenses) => {\n      return [enteredData, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}